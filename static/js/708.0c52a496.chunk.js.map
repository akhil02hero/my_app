{"version":3,"file":"static/js/708.0c52a496.chunk.js","mappings":"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","sources":["components/WaterTracker.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./WaterTracker.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCircleRight,\n  faPen,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst WaterTracker = () => {\n  const [waterData, setWaterData] = useState([]);\n  const [id, setId] = useState(null);\n  const [editableElementId, setEditableElementId] = useState(false);\n  const [waterLevel, setWaterLevel] = useState(0);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [inputMaxValue, setInputMaxValue] = useState(\"\");\n  const [maxWaterLevel, setMaxWaterLevel] = useState(2000);\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleMaxInputChange = (e) => {\n    setInputMaxValue(e.target.value);\n  };\n\n  const handleButtonClick = () => {\n    const inputValueInt = parseInt(inputValue, 10);\n    if (!isNaN(inputValueInt)) {\n      const time = new Date();\n      setWaterData([\n        ...waterData,\n        {\n          id: waterData.length + 1,\n          time: time.toLocaleTimeString(),\n          date: time.toLocaleDateString(),\n          water: inputValueInt,\n        },\n      ]);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"waterData:\", waterData);\n    const sum = waterData.reduce((accumulator, currentObj) => {\n      return accumulator + currentObj.water;\n    }, 0);\n    setWaterLevel(sum);\n  }, [waterData]);\n\n  const handleMaxButtonClick = () => {\n    const inputMaxValueInt = parseInt(inputMaxValue, 10);\n    const clampedValue = Math.min(Math.max(inputMaxValueInt, 1000), 5000);\n    setMaxWaterLevel(clampedValue);\n    setInputMaxValue(clampedValue.toString());\n  };\n\n  const handleWaterChange = (id, value) => {\n    // Find the object in the waterData array based on its id\n    const updatedData = waterData.map((element) =>\n      element.id === id ? { ...element, water: parseInt(value) } : element\n    );\n    setWaterData(updatedData);\n  };\n\n  const handleEditClick = (i, id) => {\n    setId(i);\n    setEditableElementId(id);\n  };\n\n  const isWaterLevelFull = waterLevel >= maxWaterLevel;\n  const waterLevelPercentage = (waterLevel * 100) / maxWaterLevel;\n\n  return (\n    <div className=\"WaterLevelTracker\">\n      <p className=\"water-message\">\n        {isWaterLevelFull\n          ? \"You reached the maximum water level, Great work\"\n          : `Let's Go you need to drink ${maxWaterLevel - waterLevel} ml`}\n      </p>\n      <div className=\"waterbottle\">\n        <div className=\"bottle-cap\">\n          <div className=\"bottlecap\"></div>\n        </div>\n        <div className=\"waterlevel\">\n          <div\n            className=\"water\"\n            style={{\n              height: isWaterLevelFull ? \"100%\" : `${waterLevelPercentage}%`,\n            }}\n          ></div>\n        </div>\n      </div>\n      <br />\n      <div className=\"input-form\">\n        <div className=\"water-level-input\">\n          <label className=\"custom-label\">Drink More : </label>\n          <input\n            type=\"number\"\n            className=\"custom-input\"\n            value={inputValue}\n            onChange={handleInputChange}\n          />\n          <FontAwesomeIcon\n            icon={faCircleRight}\n            className=\"iconposition\"\n            style={{ color: \"#fff\", marginLeft: \"20px\" }}\n            onClick={handleButtonClick}\n          />\n        </div>\n        <br />\n        <div className=\"max-water-level-input\">\n          <label className=\"custom-label\"> Water Level : </label>\n          <input\n            type=\"number\"\n            className=\"custom-input\"\n            value={inputMaxValue}\n            onChange={handleMaxInputChange}\n          />\n          <FontAwesomeIcon\n            icon={faPen}\n            className=\"iconposition\"\n            style={{ color: \"#fff\", marginLeft: \"20px\" }}\n            onClick={handleMaxButtonClick}\n          />\n        </div>\n      </div>\n      <br />\n\n      <p> This is Water Section</p>\n\n      {waterData.length > 0 ? (\n        waterData.map((element) => (\n          <div\n            className=\"callout-info alert alert-danger alert-dismissible fade show container text-center\"\n            key={element.id}\n          >\n            <div className=\"row\">\n              <div className=\"col\">\n                Time: <span>{element.time}</span>\n              </div>\n              <div className=\"col\">\n                Date: <span>{element.date}</span>\n              </div>\n              <div className=\"col\">\n                Water Consumed:{\" \"}\n                {editableElementId & (id === element.id) ? (\n                  <input\n                    type=\"number\"\n                    value={element.water}\n                    onChange={(e) =>\n                      handleWaterChange(element.id, e.target.value)\n                    }\n                  />\n                ) : (\n                  <span>{element.water}</span>\n                )}\n                {editableElementId & (id === element.id) ? (\n                  <>\n                    <FontAwesomeIcon\n                      icon={faCheck}\n                      style={{\n                        color: \"#fff\",\n                        marginLeft: \"20px\",\n                        fontSize: \"20px\",\n                      }}\n                      onClick={() => handleEditClick(element.id, false)}\n                    />\n                  </>\n                ) : (\n                  <></>\n                )}\n                <FontAwesomeIcon\n                  icon={faPen}\n                  style={{ color: \"#fff\", marginLeft: \"20px\" }}\n                  onClick={() => handleEditClick(element.id, true)}\n                />\n              </div>\n            </div>\n          </div>\n        ))\n      ) : (\n        <p className=\"callout-info alert alert-info alert-dismissible fade show container text-center\">\n          No Data Found\n        </p>\n      )}\n\n      {inputMaxValue >= 5001 && (\n        <div\n          className=\"alert alert-danger alert-dismissible fade show\"\n          role=\"alert\"\n        >\n          <strong>You Exceeded your Human Limit!</strong>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WaterTracker;\n"],"names":["_useState","useState","_useState2","_slicedToArray","waterData","setWaterData","_useState3","_useState4","id","setId","_useState5","_useState6","editableElementId","setEditableElementId","_useState7","_useState8","waterLevel","setWaterLevel","_useState9","_useState10","inputValue","setInputValue","_useState11","_useState12","inputMaxValue","setInputMaxValue","_useState13","_useState14","maxWaterLevel","setMaxWaterLevel","useEffect","console","log","sum","reduce","accumulator","currentObj","water","handleEditClick","i","isWaterLevelFull","waterLevelPercentage","_jsxs","className","children","_jsx","concat","style","height","type","value","onChange","e","target","FontAwesomeIcon","icon","faCircleRight","color","marginLeft","onClick","inputValueInt","parseInt","isNaN","time","Date","_toConsumableArray","length","toLocaleTimeString","date","toLocaleDateString","faPen","inputMaxValueInt","clampedValue","Math","min","max","toString","map","element","updatedData","_objectSpread","handleWaterChange","_Fragment","faCheck","fontSize","role"],"sourceRoot":""}